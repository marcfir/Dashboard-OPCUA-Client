---
name: Build

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04]
        build_type: [Release]
        arch: ["amd64"]
    runs-on: ${{matrix.os}}
    env:
      CMAKE_INSTALL_PREFIX: ${{ github.workspace }}/install
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.3.0
        with:
          path: UmatiDashboardOpcUaClient
          submodules: recursive
      - name: Build server with dependencies
        if: matrix.arch == 'amd64'
        run: |
          mkdir -p build
          cd build
          cmake ../UmatiDashboardOpcUaClient/.github/ -DCMAKE_INSTALL_PREFIX:PATH=${{ env.CMAKE_INSTALL_PREFIX }} -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DPAHO_WITH_SSL=1
          cmake --build . ${{env.CMAKE_BUILD_ARGS}}
      - name: Upload Artefacts
        uses: actions/upload-artifact@v3
        with:
          name: UmatiDashboardOpcUaClient-${{matrix.build_type}}-${{matrix.os}}-${{matrix.arch}}
          path: |
            ${{ env.CMAKE_INSTALL_PREFIX }}/bin
            ${{ env.CMAKE_INSTALL_PREFIX }}/lib/*.so*
            ${{ env.CMAKE_INSTALL_PREFIX }}/lib64/*.so*
  package-debian:
    runs-on: ubuntu-20.04
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: UmatiDashboardOpcUaClient-Release-ubuntu-20.04-amd64
  # docker:
  #   runs-on: ubuntu-20.04
  #   env:
  #     # Check if this is not a pull request and GITHUB_TOKEN is set
  #     # As all env variables are strings, you need to compaire against "== 'true'" (not "== true")
  #     IS_NOT_PR: ${{ !github.head_ref && true }}
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3.3.0
  #       with:
  #         path: UmatiDashboardOpcUaClient
  #         submodules: recursive
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2.4.0
  #     - name: PrepareReg Names
  #       run: |
  #         #shellcheck  disable=SC2154
  #         echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
  #         echo IMAGE_TAG=$(echo ${{ github.ref }} | tr '[:upper:]' '[:lower:]' |  awk '{sub(/([^\/]*\/){2}/,""); gsub(/\/|_/, "-")}1') >> $GITHUB_ENV
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2.1.0
  #       if: env.IS_NOT_PR == 'true' && ${{ github.actor }} != 'dependabot'
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Build Docker Release
  #       uses: docker/build-push-action@v4.0.0
  #       with:
  #         file: "./UmatiDashboardOpcUaClient/Dockerfile"
  #         context: ./UmatiDashboardOpcUaClient
  #         platforms: linux/amd64
  #         push: ${{env.IS_NOT_PR == 'true'}}
  #         tags: |
  #           ghcr.io/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}
